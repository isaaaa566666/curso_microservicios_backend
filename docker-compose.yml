version: "3.9"

services:
  postgres:
    image: postgres:15
    container_name: db_postgres
    restart: always
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

  redis:
    image: redis:7
    container_name: cache_redis
    restart: always
    env_file:
      - .env
    ports:
      - "${REDIS_PORT}:6379"

  auth-service:
    build:
      context: ./auth-service
    container_name: auth_service
    restart: always
    env_file:
      - ./auth-service/.env
    environment:
      DEBUG: "1"
      DB_HOST: postgres
      DB_NAME: ${POSTGRES_DB}
      DB_USER: ${POSTGRES_USER}
      DB_PASS: ${POSTGRES_PASSWORD}
      REDIS_HOST: redis
      REDIS_PORT: "6379"
    depends_on:
      - postgres
      - redis
    ports:
      - "8000:8000"
    volumes:
      - ./auth-service:/app

  blog-service:
    build: ./blog-service
    container_name: blog_service
    restart: always
    ports:
      - "8002:8000"
    volumes:
      - ./blog-service:/app
    env_file:
      - .env

  email-service:
    build: ./email-service
    container_name: email_service
    restart: always
    ports:
      - "8003:8000"
    volumes:
      - ./email-service:/app
    env_file:
      - .env

  frontend:
    build: ./frontend
    container_name: frontend
    restart: always
    ports:
      - "3000:80"
    volumes:
      - ./frontend:/app

  reverse-proxy:
    build: ./reverse-proxy
    container_name: reverse_proxy
    restart: always
    ports:
      - "80:80"
    depends_on:
      - auth-service
      - blog-service
      - email-service
      - frontend

volumes:
  pgdata:

